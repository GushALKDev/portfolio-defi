{"version":3,"sources":["img/defi.png","img/circle1.png","components/Navbar.js","img/buy-tokens.png","img/stake-tokens.png","components/Home.js","components/Token.js","gma.png","components/StakingContent.js","components/Staking.js","components/Footer.js","components/App.js","reportWebVitals.js","index.js"],"names":["Navigation","account","Navbar","expand","bg","variant","Container","Brand","href","className","src","portfolio","alt","logo","Toggle","Collapse","id","Nav","Link","as","to","target","rel","Button","slice","Home","props","state","loading","a","document","title","this","loadWeb3","loadBlockchainData","window","ethereum","web3","Web3","request","method","currentProvider","alert","on","chainID","location","reload","accounts","eth","getAccounts","setState","net","getId","networkId","console","log","buyTokens","stakeTokens","Component","Token","_getVariables","gmaToken","methods","balanceOf","call","_GMATokensBalance","GMATokensBalance","utils","fromWei","rewardToken","_RWDTokensBalance","RWDTokensBalance","errorMessage","_buyTokens","_amount","tokensPrice","ethers","toWei","toString","tokens","send","from","value","Swal","fire","icon","width","padding","text","toFixed","backdrop","updateData","_returnTokens","returnTokens","gmaTokenBalance","tokenFarm","stakingBalance","gmaTokenData","GMAToken","networks","Contract","abi","address","rewardTokenData","RewardToken","rewardTokenBalance","tokenFarmData","TokenFarm","delay","ms","Promise","res","setTimeout","Spinner","animation","style","display","margin","onSubmit","event","preventDefault","_amountBuy","type","placeholder","ref","input","_amountReturn","Staking","stakingRewardsJS","amount","amountToApprove","APR","required","gma","height","onClick","unstakeTokens","claimRewards","App","getVariables","getStakingBalance","_stakingBalance","decimals","_decimals","_APR","stakingFrom","_stakingFrom","calculateRewards","Math","pow","_stakingRewards","stakingRewards","isApproved","_address","approve","_reward","Date","now","err","content","setInterval","StakingContent","MyFooter","path","element","Footer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.01796468.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/defi.88322d1c.png\";","export default __webpack_public_path__ + \"static/media/circle1.cda3a54c.png\";","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Navbar, Nav, Button, Container } from 'react-bootstrap';\nimport logo from '../img/defi.png';\nimport portfolio from \"../img/circle1.png\"\nimport './App.css'\n\nconst Navigation = ({ account }) => {\n    return (\n        <Navbar expand=\"lg\" bg=\"dark\" variant=\"dark\">\n            <Container>\n                <Navbar.Brand><a href='https://www.gustavomartinalonso.com'><img className='portfolio' src={portfolio} alt=\"Portfolio\"/></a>\n                    <img className='logo' src={logo} alt=\"Lucky Lottery\"/> GMA DeFi\n                </Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"navbar navbar-dark bg-primary\" />\n                <Navbar.Collapse id=\"navbar navbar-dark bg-primary\">\n                    <Nav className=\"menu me-auto\">\n                        <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n                        <Nav.Link as={Link} to=\"/token\">Token</Nav.Link>\n                        <Nav.Link as={Link} to=\"/staking\">Staking</Nav.Link>\n                    </Nav>\n                    <Nav>\n                        <Nav.Link\n                            href={`https://ropsten.etherscan.io/address/${account}`}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            className=\"button nav-button btn-sm mx-4\">\n                            <Button variant=\"outline-light\">\n                                {account.slice(0, 10) + '...' + account.slice(32, 42)}\n                            </Button>\n                        </Nav.Link>\n                    </Nav>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n    )\n\n}\n\nexport default Navigation;","export default __webpack_public_path__ + \"static/media/buy-tokens.5be4e9bf.png\";","export default __webpack_public_path__ + \"static/media/stake-tokens.b36ec690.png\";","import { Component } from 'react';\nimport Navigation from './Navbar';\nimport buyTokens from '../img/buy-tokens.png';\nimport stakeTokens from '../img/stake-tokens.png';\nimport Web3 from 'web3';\n\nclass Home extends Component {\n    \n    async componentDidMount() {\n        document.title = \"Home - GMA DeFi\"\n        // 1. Carga de Web3\n        await this.loadWeb3()\n        // 2. Carga de datos de la Blockchain\n        await this.loadBlockchainData()\n    }\n\n    // 1. Carga de Web3\n    async loadWeb3() {\n        if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum)\n        await window.ethereum.request({ method: 'eth_requestAccounts' });\n        // const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        // console.log('Accounts: ', accounts)\n        }\n        else if (window.web3) {\n        window.web3 = new Web3(window.web3.currentProvider)\n        }\n        else {\n        window.alert('¡Deberías considerar usar Metamask!')\n        }\n\n        window.ethereum.on('chainChanged', (chainID) => {\n        window.location.reload();\n        });\n\n        window.ethereum.on('accountsChanged', async function (accounts) {\n        window.location.reload();\n        })\n    }\n\n        // 2. Carga de datos de la Blockchain\n    async loadBlockchainData() {\n        const web3 = window.web3\n        const accounts = await web3.eth.getAccounts()\n        this.setState({ account: accounts[0] })\n        // Ganache -> 5777, Rinkeby -> 4, BSC -> 97\n        const networkId = await web3.eth.net.getId() \n        console.log('networkid:', networkId)\n\n        this.setState({loading: false})\n    }\n\n    constructor(props) {\n        super(props)\n        this.state = {\n          account: '0x0',\n          loading: true\n        }\n      }\n      \n      render() {\n        return (\n            <div className='Home'>\n                <Navigation account={this.state.account} />\n                {/* <MyCarousel /> */}\n                <div className=\"content\">\n                    <h1>GMA DeFi instructions<br /><br /></h1>\n                    <h4>IMPORTANT!!! THE SMART CONTRACTS ARE DEPLOYED ON ROPSTEN NETWORK<br /><br /></h4>\n                    <div className='home_content'>\n                        <p>Welcome to GMA decentralizes Finances!!! To win rewards in RWD tokens, you have to buy GMA tokens first at <a href='tokens'>\"Tokens\"</a> tab. The price of each GMA token is 0.01 ETH</p>\n                        <a href='token'><img src={buyTokens} className='home_images'/></a>\n                        <p>After that, you are able to stake your GMA tokens and get rewards at <a href='staking'>\"Staking\"</a> tab.</p>\n                        <a href='staking'><img src={stakeTokens} className='home_images'/></a>\n                        <p>You will get a 45% APR. The staking has not any locking period.</p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default Home;","import { Component } from 'react';\nimport Navigation from './Navbar';\nimport GMAToken from '../abis/GMAToken.json';\nimport RewardToken from '../abis/RewardToken.json';\nimport TokenFarm from '../abis/TokenFarm.json';\nimport Web3 from 'web3';\nimport Swal from 'sweetalert2';\nimport { Spinner } from 'react-bootstrap';\n\nclass Token extends Component {\n\n  async componentDidMount() {\n    document.title = \"Tokens Management - GMA DeFi\"\n    // 1. Carga de Web3\n    await this.loadWeb3()\n    // 2. Carga de datos de la Blockchain\n    await this.loadBlockchainData()\n  }\n\n  // 1. Carga de Web3\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.request({ method: 'eth_requestAccounts' });\n      // const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n      // console.log('Accounts: ', accounts)\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('¡Deberías considerar usar Metamask!')\n    }\n  }\n\n  // 2. Carga de datos de la Blockchain\n  async loadBlockchainData() {\n    const web3 = window.web3\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n    // Ganache -> 5777, Rinkeby -> 4, BSC -> 97\n    const networkId = await web3.eth.net.getId()\n    // console.log('networkid:', networkId)\n\n    // Carga del GMAToken\n    const gmaTokenData = GMAToken.networks[networkId]\n    if (gmaTokenData) {\n      const gmaToken = new web3.eth.Contract(GMAToken.abi, gmaTokenData.address)\n      this.setState({ gmaToken: gmaToken })\n      let gmaTokenBalance = await gmaToken.methods.balanceOf(this.state.account).call()\n      this.setState({ gmaTokenBalance: gmaTokenBalance.toString() })\n    }\n    else {\n      window.alert('El GMAToken no se ha desplegado en la red!!!')\n    }\n\n    // Carga del RewardToken\n    const rewardTokenData = RewardToken.networks[networkId]\n    if (rewardTokenData) {\n      const rewardToken = new web3.eth.Contract(RewardToken.abi, rewardTokenData.address)\n      this.setState({ rewardToken: rewardToken })\n      let rewardTokenBalance = await rewardToken.methods.balanceOf(this.state.account).call()\n      this.setState({ rewardTokenBalance: rewardTokenBalance.toString() })\n    }\n    else {\n      window.alert('El RewardToken no se ha desplegado en la red!!!')\n    }\n\n    const tokenFarmData = TokenFarm.networks[networkId]\n    if (tokenFarmData) {\n      const tokenFarm = new web3.eth.Contract(TokenFarm.abi, tokenFarmData.address)\n      this.setState({ tokenFarm: tokenFarm })\n      let stakingBalance = await tokenFarm.methods.stakingBalance(this.state.account).call()\n      this.setState({ stakingBalance: stakingBalance.toString() })\n    }\n    else {\n      window.alert('El TokenFarm no se ha desplegado en la red!!!')\n    }\n\n    this.setState({ loading: false })\n    this.updateData();\n  }\n\n  async updateData() {\n    const delay = ms => new Promise(res => setTimeout(res, ms));\n    await delay(1000);\n    this._getVariables();\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '0x0',\n      loading: false,\n      gmaToken: {},\n      gmaTokenBalance: 'Loading...',\n      rewardToken: {},\n      RWDTokensBalance: 'Loading...',\n      tokenFarm: {},\n      stakingBalance: 'Loading...',\n      GMATokensBalance: 'Loading...'\n    }\n  }\n\n  _getVariables = async () => {\n    try {\n      const _GMATokensBalance = await this.state.gmaToken.methods.balanceOf(this.state.account).call();\n      this.setState({GMATokensBalance: window.web3.utils.fromWei(_GMATokensBalance, 'ether') + ' GMA'});\n      const _RWDTokensBalance = await this.state.rewardToken.methods.balanceOf(this.state.account).call();\n      this.setState({RWDTokensBalance: window.web3.utils.fromWei(_RWDTokensBalance, 'ether').slice(0, -10) + ' RWD'});\n    } catch (err) {\n      this.setState({ errorMessage: err })\n    } finally {\n      this.setState({ loading: false })\n    }\n  }\n\n  _buyTokens = async (_amount) => {\n    try {\n      this.setState({ loading: true })\n      const tokensPrice = _amount * 0.01\n      const ethers = window.web3.utils.toWei(tokensPrice.toString(), 'ether')\n      const tokens = window.web3.utils.toWei(_amount.toString(), 'ether')\n      // console.log('tokens', tokens);\n      await this.state.gmaToken.methods.buyTokens(tokens).send({\n        from: this.state.account,\n        value: ethers\n      })\n      Swal.fire({\n        icon: 'success',\n        title: 'Tokens bought successfully!!',\n        width: 800,\n        padding: '3em',\n        text: `You bought ${_amount} Tokens by ${(ethers / 10 ** 18).toFixed(2)} ETH`,\n        backdrop: `\n          rgba(15, 238, 168, 0.2)\n          left top\n          no-repeat\n        `\n      })\n      this.updateData();\n    } catch (err) {\n      this.setState({ errorMessage: err })\n    } finally {\n      this.setState({ loading: false })\n    }\n  }\n\n  _returnTokens = async (_amount) => {\n    try {\n      // console.log('Devolución de tokens en ejecución...')\n      this.setState({ loading: true })\n      const tokensPrice = _amount * 0.01\n      const ethers = window.web3.utils.toWei(tokensPrice.toString(), 'ether')\n      const tokens = window.web3.utils.toWei(_amount.toString(), 'ether')\n      await this.state.gmaToken.methods.returnTokens(tokens).send({\n        from: this.state.account\n      })\n      Swal.fire({\n        icon: 'warning',\n        title: 'Tokens returned successfully!!',\n        width: 800,\n        padding: '3em',\n        text: `You returned ${_amount} Tokens by ${(ethers / 10 ** 18).toFixed(2)} ETH`,\n        backdrop: `\n          rgba(15, 238, 168, 0.2)\n          left top\n          no-repeat\n        `\n      })\n      this.updateData();\n    } catch (err) {\n      this.setState({ errorMessage: err })\n    } finally {\n      this.setState({ loading: false })\n    }\n  }\n\n  render() {\n    if (this.state.loading) return (\n      <div>\n        <Navigation account={this.state.account} /><br />\n        <div  className='loading'>\n          <Spinner animation='border' style={{ display: 'flex', margin: 12 }} />\n          <p className='mx3 my-0'>Loading blockchain data, wait a moment please...</p>\n        </div>\n      </div>\n    );\n    \n    return (\n      <div className=\"Token\">\n        <Navigation account={this.state.account} />\n          <div className=\"tokens-container\">\n          <h2>ERC-20 Tokens Management</h2>\n            <div className='tokens-balance'>\n              <h3>GMA Balance</h3>\n              <h4>{this.state.GMATokensBalance}</h4>\n            </div>\n            <div className='tokens-balance'>\n              <h3>RWD Balance</h3>\n              <h4>{this.state.RWDTokensBalance}</h4>\n            </div>\n            <div className='tokens-buy'>\n                <h3>Buy GMA Tokens</h3>\n                <form onSubmit={(event) => {\n                  event.preventDefault()\n                  const _amountBuy = this._amountBuy.value\n                  this._buyTokens(_amountBuy)\n                }}>\n                  <input type='number'\n                    className='form-control mb-1'\n                    placeholder='Tokens amount'\n                    ref={(input) => this._amountBuy = input} />\n                  <input type='submit'\n                    className='bbtn btn-block btn-primary btn-sm'\n                    value='Buy Tokens' />\n                </form>\n            </div>\n            <div className='tokens-return'>\n              <h3>Return GMA Tokens</h3>\n              <form onSubmit={(event) => {\n                event.preventDefault()\n                const _amountReturn = this._amountReturn.value\n                this._returnTokens(_amountReturn)\n              }}>\n                <input type='number'\n                  className='form-control mb-1'\n                  placeholder='Tokens amount'\n                  ref={(input) => this._amountReturn = input} />\n                <input type='submit'\n                  className='bbtn btn-block btn-warning btn-sm'\n                  value='Return Tokens' />\n              </form>\n            </div>\n          </div>\n      </div>\n    );\n  }\n\n}\n\nexport default Token;","export default __webpack_public_path__ + \"static/media/gma.2a7d4c36.png\";","import React, { Component } from 'react';\nimport gma from '../gma.png';\n\nclass Staking extends Component {\n\n  render() {\n    return (\n      <div className=\"tokens-container\">\n        <h2>&nbsp;&nbsp;&nbsp;&nbsp;Staking Management&nbsp;&nbsp;&nbsp;&nbsp;</h2>\n        <div className='tokens-balance'>\n          <h3>Current Staking</h3>\n          <h4>{this.props.stakingBalance}</h4>\n        </div>\n        <div className='tokens-balance'>\n          <h3>Current Rewards</h3>\n          <h4>{this.props.stakingRewardsJS}</h4>\n        </div>\n        <div className='staking-container card mb-4'>\n          <div className='card-body'>\n            <form className='mb-3' onSubmit={(event) => {\n              event.preventDefault()\n              const amount = window.web3.utils.toWei(this.input.value.toString(), 'Ether');\n              const amountToApprove = window.web3.utils.toWei('1000000', 'Ether');\n              this.props.stakeTokens(amount, amountToApprove);\n            }}>\n              <label className='float-left'>\n                <h5>Stake Tokens ({this.props.APR}% APR)</h5>\n              </label>\n              <span className='staking-balances float-right text muted'>\n                <h5>Balances</h5><hr />\n                Tokens: {this.props.GMATokensBalance}<br />\n                Rewards: {this.props.RWDTokensBalance}\n              </span>\n              <div className='staking-input'>\n                <div className='input-group mb-4'>\n                  <input\n                    type=\"text\"\n                    ref={(input) => { this.input = input }}\n                    className=\"from-control from-control-lg\"\n                    placeholder='0'\n                    required\n                  />\n                  <div className='input-group-append'>\n                    <div className='input-group-text'>\n                      <img src={gma} height='32' alt=\"\" />\n                      &nbsp;&nbsp;&nbsp;MAX\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <button type=\"submit\" className='bbtn btn-block btn-primary btn-sm'>STAKE!</button>\n            </form>\n            <button\n              type=\"submit\"\n              className='bbtn btn-block btn-warning btn-sm'\n              onClick={(event) => {\n                event.preventDefault()\n                this.props.unstakeTokens()\n              }}> UNSTAKE!\n            </button>\n            <button\n              type=\"submit\"\n              className='bbtn btn-block btn-success btn-sm'\n              onClick={(event) => {\n                event.preventDefault()\n                this.props.claimRewards()\n              }}> CLAIM REWARDS!\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\n\nimport GMAToken from '../abis/GMAToken.json';\nimport RewardToken from '../abis/RewardToken.json';\nimport TokenFarm from '../abis/TokenFarm.json';\n\nimport Web3 from 'web3';\n\nimport Navigation from './Navbar';\nimport StakingContent from './StakingContent';\nimport { Spinner } from 'react-bootstrap';\n\nclass App extends Component {\n\n  async componentDidMount() {\n    document.title = \"Staking Management - GMA DeFi\"\n    // 1. Carga de Web3\n    await this.loadWeb3()\n    // 2. Carga de datos de la Blockchain\n    await this.loadBlockchainData()\n  }\n\n  // 1. Carga de Web3\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.request({ method: 'eth_requestAccounts' });\n      // const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n      // console.log('Accounts: ', accounts)\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('¡Deberías considerar usar Metamask!')\n    }\n\n    window.ethereum.on('chainChanged', (chainID) => {\n      window.location.reload();\n    });\n\n    window.ethereum.on('accountsChanged', async function (accounts) {\n      window.location.reload();\n    })\n  }\n\n  // 2. Carga de datos de la Blockchain\n  async loadBlockchainData() {\n    const web3 = window.web3\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n    // Ganache -> 5777, Rinkeby -> 4, BSC -> 97\n    const networkId = await web3.eth.net.getId() \n    // console.log('networkid:', networkId)\n\n    // Carga del GMAToken\n    const gmaTokenData = GMAToken.networks[networkId]\n    if (gmaTokenData) {\n      const gmaToken = new web3.eth.Contract(GMAToken.abi, gmaTokenData.address)\n      this.setState({gmaToken: gmaToken})\n      let gmaTokenBalance = await gmaToken.methods.balanceOf(this.state.account).call()\n      this.setState({gmaTokenBalance: gmaTokenBalance.toString()})\n    }\n    else {\n      window.alert('El GMAToken no se ha desplegado en la red!!!')\n    }\n\n    // Carga del RewardToken\n    const rewardTokenData = RewardToken.networks[networkId]\n    if (rewardTokenData) {\n      const rewardToken = new web3.eth.Contract(RewardToken.abi, rewardTokenData.address)\n      this.setState({rewardToken: rewardToken})\n      // let rewardTokenBalance = await rewardToken.methods.balanceOf(this.state.account).call()\n      // this.setState({rewardTokenBalance: rewardTokenBalance.toString()})\n    }\n    else {\n      window.alert('El RewardToken no se ha desplegado en la red!!!')\n    }\n\n    const tokenFarmData = TokenFarm.networks[networkId]\n    if (tokenFarmData) {\n      const tokenFarm = new web3.eth.Contract(TokenFarm.abi, tokenFarmData.address)\n      this.setState({tokenFarm: tokenFarm})\n      // let stakingBalance = await tokenFarm.methods.stakingBalance(this.state.account).call()\n      // this.setState({stakingBalance: stakingBalance.toString()})\n    }\n    else {\n      window.alert('El TokenFarm no se ha desplegado en la red!!!')\n    }\n    \n    this.updateData();\n  }\n\n  async updateData() {\n    const delay = ms => new Promise(res => setTimeout(res, ms));\n    await delay(1000);\n    this.getVariables();\n  }\n\n  getVariables = async () => {\n    try {\n      const _GMATokensBalance = await this.state.gmaToken.methods.balanceOf(this.state.account).call();\n      this.setState({GMATokensBalance: window.web3.utils.fromWei(_GMATokensBalance, 'ether') + ' GMA'});\n      const _RWDTokensBalance = await this.state.rewardToken.methods.balanceOf(this.state.account).call();\n      (_RWDTokensBalance !== '0') ? (this.setState({RWDTokensBalance: window.web3.utils.fromWei(_RWDTokensBalance, 'ether').slice(0, -10) + ' RWD'})\n      ) : (this.setState({RWDTokensBalance: '0 RWD'}))\n      const _stakingBalance = await this.state.tokenFarm.methods.getStakingBalance(this.state.account).call();\n      this.setState({stakingBalance: window.web3.utils.fromWei(_stakingBalance, 'ether') + ' GMA'});\n      const _decimals = await this.state.rewardToken.methods.decimals().call();\n      this.setState({decimals: _decimals});\n      const _APR = await this.state.tokenFarm.methods.APR().call();\n      this.setState({APR: _APR});\n      const _stakingFrom = (await this.state.tokenFarm.methods.stakingFrom(this.state.account).call());\n      this.setState({stakingFrom: _stakingFrom});\n      const _stakingRewards = (await this.state.tokenFarm.methods.calculateRewards(this.state.account).call()) / Math.pow(10,_decimals);\n      this.setState({stakingRewards: _stakingRewards.toFixed(8) + ' RWD'});\n    } catch (err) {\n      this.setState({ errorMessage: err })\n    } finally {\n      this.setState({ loading: false })\n    }\n  }\n\n  calculateRewards (_stakingFrom, _stakingBalance, _APR, _decimals) {\n    try {\n      let _reward;\n      if (_stakingBalance === 'Loading...') _reward = 'Loading...';\n      else {\n        const _stakedTime = (Date.now() / 1000) - _stakingFrom;\n        _reward = (_stakedTime * ((_stakingBalance.slice(0, -4) / 100 ) * _APR)) / 31536000;\n      }\n      this.setState({stakingRewardsJS: _reward.toFixed(8) + ' RWD'});\n    } catch (err) {\n      this.setState({ errorMessage: err })\n    }\n  }\n\n  stakeTokens = async (amount, amountToApprove) => {\n    try {\n      if (this.state.stakingBalance.slice(0, -4) > 0) {\n        window.alert('Please, unstake your tokens before increase the stkaking amount.');\n        return null;\n      }\n      else { \n        this.setState({loading: true});\n        const approved = await this.state.gmaToken.methods.isApproved(this.state.account, this.state.tokenFarm._address).call();\n        if (approved < amount) {\n          await this.state.gmaToken.methods.approve(this.state.tokenFarm._address, amountToApprove).send({from: this.state.account})\n          await this.state.tokenFarm.methods.stakeTokens(amount).send({from: this.state.account})\n          window.location.reload();\n        }\n        else {\n          await this.state.tokenFarm.methods.stakeTokens(amount).send({from: this.state.account})\n          window.location.reload();\n        }\n      }\n    } catch (err) {\n      this.setState({ errorMessage: err })\n      this.setState({loading: false});\n    }\n  }\n\n  unstakeTokens = async () => {\n    try {\n      this.setState({loading: true})\n      await this.state.tokenFarm.methods.unstakeTokens().send({from: this.state.account})\n      window.location.reload();\n    } catch (err) {\n      this.setState({ errorMessage: err })\n      this.setState({loading: false});\n    }\n  }\n\n  claimRewards = async () => {\n    try {\n      this.setState({loading: true})\n      await this.state.tokenFarm.methods.claimRewards().send({from: this.state.account})\n      window.location.reload();\n    } catch (err) {\n      this.setState({ errorMessage: err })\n      this.setState({loading: false});\n    }\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '0x0',\n      loading: false,\n      gmaToken: {},\n      GMATokensBalance:   'Loading...',\n      rewardToken: {},\n      RWDTokensBalance: 'Loading...',\n      tokenFarm: {},\n      stakingBalance: 'Loading...',\n      stakingRewards: 'Loading...',\n      stakingRewardsJS: 'Loading...',\n      decimals: '0',\n      APR: '0',\n      stakingFrom:  '0'\n    }\n  }\n\n  render() {\n\n    setInterval(()=>{\n      this.calculateRewards(this.state.stakingFrom, this.state.stakingBalance, this.state.APR, this.state.decimals);\n    },1000);\n\n    let content\n\n    content = <StakingContent\n      GMATokensBalance = {this.state.GMATokensBalance}\n      RWDTokensBalance = {this.state.RWDTokensBalance}\n      stakingRewards = {this.state.stakingRewards}\n      stakingRewardsJS = {this.state.stakingRewardsJS}\n      stakingBalance = {this.state.stakingBalance}\n      APR = {this.state.APR}\n      stakeTokens = {this.stakeTokens}\n      unstakeTokens = {this.unstakeTokens}\n      claimRewards = {this.claimRewards}\n    />\n\n    if (this.state.loading) {\n      return (\n        <div>\n          <Navigation account={this.state.account} /><br />\n          <div  className='loading'>\n            <Spinner animation='border' style={{ display: 'flex', margin: 12 }} />\n            <p className='mx3 my-0'>Loading blockchain data, wait a moment please...</p>\n          </div>\n        </div>\n    )};\n\n    return (\n      <div>\n        <Navigation account={this.state.account} />\n        {content}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\n\nconst MyFooter = () => (\n    <div className='footer'>© 2022 Copyright:&nbsp;<a href='https://www.gustavomartinalonso.com'>www.gustavomartinalonso.com</a></div>\n);\n\nexport default MyFooter;","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport './App.css';\n\nimport Home from './Home';\nimport Token from './Token';\nimport Staking from './Staking';\nimport Footer from './Footer';\n\nclass App extends Component {\n    \n    render() {\n        return (\n            <BrowserRouter>\n                <div className=\"App\">\n                    <div>\n                        <Routes>\n                            <Route path=\"/\" element={<Home />} />\n                            <Route path=\"/token\" element={<Token />} />\n                            <Route path=\"/staking\" element={<Staking />} />\n                            <Route path=\"*\" element={<Home />} />\n                        </Routes>\n                    </div>\n                    <Footer />\n                </div>\n                <div className='spacer'></div>\n            </BrowserRouter>\n        );\n    }\n\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport ReactDOM from 'react-dom/client';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <App />\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}